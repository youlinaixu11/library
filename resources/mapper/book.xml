<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.BookMapper">

    <insert id="save">
        insert into book(name, author, publisher, publish_date, category, description, cover, nums)
        values (#{name}, #{author},#{publisher}, #{publishDate}, #{category}, #{description}, #{cover}, #{nums})
    </insert>

    <update id="updateById">
        update book set
            author = #{author}, name = #{name}, category = #{category},
            publisher = #{publisher}, publish_date = #{publishDate}, updatetime = #{updatetime},
            description = #{description}, cover = #{cover}, nums = #{nums} where id = #{id}
    </update>

    <update id="updateByBookName">
        update book set nums = nums + 1 where name = #{name}
    </update>


    <delete id="deleteById">
        delete from book where id = #{id}
    </delete>

    <select id="selectBlog" resultType="com.example.springboot.entity.Book">
        select * from book
    </select>

    <select id="listByCondition" resultType="com.example.springboot.entity.Book">
        select * from book
        <where>

            <if test="name != null and name != '' ">
                name like concat('%', #{ name }, '%')
            </if>

            <if test="bookNo != null and bookNo != '' ">
                and bookNo = #{bookNo}
            </if>

        </where>
        order by id desc
    </select>

    <select id="list" resultType="com.example.springboot.entity.Book">
        select * from book order by id desc
    </select>

    <select id="getById" resultType="com.example.springboot.entity.Book">
        select * from book where id = #{id}
    </select>

    <select id="getByname" resultType="com.example.springboot.entity.Book">
        select * from book where name = #{name}
    </select>

</mapper>